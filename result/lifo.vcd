$date
	Sun Aug 17 07:03:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module lifo_tb $end
$var wire 1 ! full $end
$var wire 1 " error $end
$var wire 1 # empty $end
$var wire 8 $ data_out [7:0] $end
$var reg 1 % clk $end
$var reg 8 & data_in [7:0] $end
$var reg 1 ' pop $end
$var reg 1 ( push $end
$var reg 1 ) rst $end
$var integer 32 * i [31:0] $end
$scope module uut $end
$var wire 1 % clk $end
$var wire 8 + data_in [7:0] $end
$var wire 1 , doing_pop $end
$var wire 1 - doing_push $end
$var wire 1 ' pop $end
$var wire 1 ( push $end
$var wire 1 ) rst $end
$var wire 1 ! full $end
$var wire 1 # empty $end
$var reg 8 . data_out [7:0] $end
$var reg 1 " error $end
$var reg 5 / top [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 /
b0 .
0-
0,
b0 +
bx *
1)
0(
0'
b0 &
0%
b0 $
1#
0"
0!
$end
#5
1%
#10
0%
0)
#15
1%
#20
1-
0%
b1 &
b1 +
b1 *
1(
#25
0#
b1 /
1%
#30
0%
b10 &
b10 +
b10 *
#35
b10 /
1%
#40
0%
b11 &
b11 +
b11 *
#45
b11 /
1%
#50
0%
b100 &
b100 +
b100 *
#55
b100 /
1%
#60
0%
b101 &
b101 +
b101 *
#65
b101 /
1%
#70
0%
b110 &
b110 +
b110 *
#75
b110 /
1%
#80
0%
b111 &
b111 +
b111 *
#85
b111 /
1%
#90
0%
b1000 &
b1000 +
b1000 *
#95
b1000 /
1%
#100
0%
b1001 &
b1001 +
b1001 *
#105
b1001 /
1%
#110
0%
b1010 &
b1010 +
b1010 *
#115
b1010 /
1%
#120
0%
b1011 &
b1011 +
b1011 *
#125
b1011 /
1%
#130
0%
b1100 &
b1100 +
b1100 *
#135
b1100 /
1%
#140
0%
b1101 &
b1101 +
b1101 *
#145
b1101 /
1%
#150
0%
b1110 &
b1110 +
b1110 *
#155
b1110 /
1%
#160
0%
b1111 &
b1111 +
b1111 *
#165
b1111 /
1%
#170
0%
b10000 &
b10000 +
b10000 *
#175
1!
b10000 /
1%
#180
1,
0-
0%
1'
0(
b0 *
#185
0!
b1111 /
b10000 $
b10000 .
1%
#190
0%
b1 *
#195
b1110 /
b1111 $
b1111 .
1%
#200
0%
b10 *
#205
b1101 /
b1110 $
b1110 .
1%
#210
0%
b11 *
#215
b1100 /
b1101 $
b1101 .
1%
#220
0%
b100 *
#225
b1011 /
b1100 $
b1100 .
1%
#230
0%
b101 *
#235
b1010 /
b1011 $
b1011 .
1%
#240
0%
b110 *
#245
b1001 /
b1010 $
b1010 .
1%
#250
0%
b111 *
#255
b1000 /
b1001 $
b1001 .
1%
#260
0%
b1000 *
#265
b111 /
b1000 $
b1000 .
1%
#270
0%
b1001 *
#275
b110 /
b111 $
b111 .
1%
#280
0%
b1010 *
#285
b101 /
b110 $
b110 .
1%
#290
0%
b1011 *
#295
b100 /
b101 $
b101 .
1%
#300
0%
b1100 *
#305
b11 /
b100 $
b100 .
1%
#310
0%
b1101 *
#315
b10 /
b11 $
b11 .
1%
#320
0%
b1110 *
#325
b1 /
b10 $
b10 .
1%
#330
0%
b1111 *
#335
1#
b0 /
b1 $
b1 .
1%
#340
1-
0,
0%
b10101010 &
b10101010 +
1(
0'
b10000 *
#345
0#
b1 /
1%
#350
1,
0-
0%
1'
0(
#355
1#
b0 /
b10101010 $
b10101010 .
1%
#360
1-
0,
0%
b1100100 &
b1100100 +
b0 *
1(
0'
#365
0#
b1 /
1%
#370
0%
b1100101 &
b1100101 +
b1 *
#375
b10 /
1%
#380
0%
b1100110 &
b1100110 +
b10 *
#385
b11 /
1%
#390
0%
b1100111 &
b1100111 +
b11 *
#395
b100 /
1%
#400
0%
b1101000 &
b1101000 +
b100 *
#405
b101 /
1%
#410
0%
b1101001 &
b1101001 +
b101 *
#415
b110 /
1%
#420
0%
b1101010 &
b1101010 +
b110 *
#425
b111 /
1%
#430
0%
b1101011 &
b1101011 +
b111 *
#435
b1000 /
1%
#440
0%
b1101100 &
b1101100 +
b1000 *
#445
b1001 /
1%
#450
0%
b1101101 &
b1101101 +
b1001 *
#455
b1010 /
1%
#460
0%
b1101110 &
b1101110 +
b1010 *
#465
b1011 /
1%
#470
0%
b1101111 &
b1101111 +
b1011 *
#475
b1100 /
1%
#480
0%
b1110000 &
b1110000 +
b1100 *
#485
b1101 /
1%
#490
0%
b1110001 &
b1110001 +
b1101 *
#495
b1110 /
1%
#500
0%
b1110010 &
b1110010 +
b1110 *
#505
b1111 /
1%
#510
0%
b1110011 &
b1110011 +
b1111 *
#515
1!
b10000 /
1%
#520
0-
0%
b11111111 &
b11111111 +
0(
b10000 *
#525
1%
#530
1-
0%
b1010101 &
b1010101 +
1'
1(
#535
1,
0!
b1111 /
b1110011 $
b1110011 .
1%
#540
0-
0%
0(
#545
b1110 /
b1110010 $
b1110010 .
1%
#550
1-
0,
0%
b10001 &
b10001 +
1(
0'
#555
b0 $
b0 .
1#
b0 /
1%
1)
#560
0%
0)
#565
0#
b1 /
1%
#570
0%
#575
b10 /
1%
#580
0%
#585
b11 /
1%
#590
0%
#595
b100 /
1%
#600
0%
#605
b101 /
1%
#610
0%
#615
b110 /
1%
#620
0%
#625
b111 /
1%
#630
0%
#635
b1000 /
1%
#640
0%
#645
b1001 /
1%
#650
0%
#655
b1010 /
1%
#660
0%
#665
b1011 /
1%
#670
0%
